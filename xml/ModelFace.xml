<model name="Face">
    <pgroup name="Eyes">
        <prop name="Spacing" min=".18" max=".38" default=".28" />
        <prop name="Depth" min=".44" max=".64" default=".54" />
        <prop name="Size" min=".1" max=".2" />
        <prop name="Bottom" min="-PI/4" max="-PI/8"/>
        <val name="Corner">
            Spacing + Size
        </val>
        <angleval name="Corner_Angle">
            <x>Corner</x>
            <z>Depth</z>
        </angleval>
        <angleval name="Eye_Angle">
            <x>Spacing</x>
            <z>Depth</z>
        </angleval>
    </pgroup>

    <pgroup name="Brow">
        <prop name="Outer_Depth" min=".7" max=".9" />
        <prop name="Height" min=".1" max=".2" />
    </pgroup>

    <pgroup name="Jaw">
        <prop name="Width" min=".78" max="1.18" default=".98"/>
        <prop name="Height" min="-.67" max="-.47" default="-.57"/>
        <prop name="Length" min=".55" max=".85" default=".7"/>
        <prop name="Angle" min=".32 + PI/2" max=".72 + PI/2" default=".52 + PI/2"/>
    </pgroup>

    <pgroup name="Neckline">
        <prop name="Width" min=".68" max="1.08" default=".88"/>
        <prop name="Height" min="-.126" max="0" default="-.063"/>
        <prop name="Length" min=".23" max=".53" default=".38"/>
        <prop name="Angle" min="0.38 + PI/2" max=".88 + PI/2" default=".63 + PI/2" />
    </pgroup>

    <pgroup name="Neck">
        <prop name="Fatness" min="-.1" max=".1" />
    </pgroup>

    <pgroup name="Mouth">
        <prop name="Height" min="-.66" max="-.46" default="-.56"/>
        <prop name="Width" min=".32" max=".52" default=".42"/>
        <prop name="Depth" min=".59" max=".79" default=".69"/>
        <prop name="Bite_Size" min="0" max=".13" default=".065"/>
        <angleval name="Corner_Angle">
            <x>Width/2</x>
            <z>Depth</z>
        </angleval>
    </pgroup>

    <pgroup name="Lips">
        <prop name="Upper_Length" min="0" max=".2" default=".1" />
        <prop name="Upper_Height" min="-PI/2" max=".88 - PI/2" default=".44 - PI/2" />
        <prop name="Lower_Length" min="0" max=".128" default=".064" />
        <prop name="Lower_Height" min="-1.275 - PI/2" max="-PI/2" default="-.85 - PI/2" />
    </pgroup>

    <pgroup name="Chin">
        <prop name="Outer_Depth" min="-.2" max="0" default="-.066" />
        <prop name="Inner_Depth" min="0" max=".3" default=".166" />
        <prop name="Side_Depth" min="-.1" max=".05" default="-.05" />
    </pgroup>

    <pgroup name="Nose">
        <prop name="Width" min=".15" max=".35" default=".25"/>
        <prop name="Height" min="-.43" max="-.23" default="-.33"/>
        <prop name="Depth" min="0.68" max=".88" default=".78"/>
        <prop name="Length" min=".13" max=".23" default=".18"/>
        <prop name="Squish" min="PI/2 - .7" max="PI/2 + .3" default="PI/2 -.07" />

        <prop name="Zeuth" min=".05" max=".10" default=".077"/>
        <prop name="Forward" min="0" max=".05" default=".034"/>

        <prop name="Nostril_Spacing" min=".01" max=".05" default=".016"/>

        <angleval name="Nostril_Angle">
            <x>Nose.Nostril_Spacing</x>
            <z>Nose.Depth + Nose.Forward</z>
        </angleval>
    </pgroup>

    <pgroup name="Septum">
        <prop name="Width" min=".01" max=".08" default=".04" />
        <prop name="Height1" min=".05" max=".08" default=".06" />
        <prop name="Height2" min=".05" max=".3" default=".093" />
        <prop name="Height3" min=".05" max=".3" default=".140" />
        <prop name="Height4" min=".1" max=".4" default=".185" />

        <prop name="Bridge_Depth" min=".705" max=".905" default=".805"/>
    </pgroup>

    <pgroup name="Philtrum">
        <prop name="Width" min=".01" max=".08" />
        <prop name="Depth" min="-.047" max=".053" default=".028"/>
        <prop name="Indent" min="0" max=".025" />
        <prop name="Outer_Curve" min="0" max="1" />
    </pgroup>

    <pgroup name="Sinuses">
        <prop name="Depth" min="0" max=".2" />
        <prop name="Height" min="0" max="1" />
    </pgroup>

    <pgroup name="Cheeks">
        <prop name="Height" min="-.45" max="-.15" />
        <prop name="Depth" min=".7" max="1" />
        <prop name="Spacing" min="-PI/32" max="PI/32" />
        <prop name="Puff" min="0" max=".5" />

        <val name="Side_Depth">
            (Depth^2 + Width^2)^(1/2)
        </val>
        <val name="Side_Angle">
            atan2(Width, Depth)
        </val>
    </pgroup>

    <section name="Eyes" pgroup="Eyes">
        <sphere reflect="both" visible="true">
            <center x="Eyes.Spacing" y="0" z="Eyes.Depth" />
            <radius>Eyes.Size</radius>
        </sphere>
    </section>

    <section name="Brow" pgroup="Brow">
        <bezier res="7" reflect="both">
            <point>
                <x>Eyes.Corner</x>
                <y>0</y>
                <z>Eyes.Depth</z>
            </point>
            <point type="cyl">
                <r>Brow.Outer_Depth</r>
                <theta>Eyes.Corner_Angle.theta</theta>
                <z>Brow.Height / 2</z>
            </point>
            <point type="cyl">
                <r>Brow.Outer_Depth</r>
                <theta>Eyes.Corner_Angle.theta</theta>
                <z>Brow.Height</z>
            </point>
        </bezier>
    </section>

    <section name="Jaw" pgroup="Jaw">
        <parab res="15" name="Jaw">
            <center x="0" y="Jaw.Height" z="0" />
            <width>Jaw.Width</width>
            <length>Jaw.Length</length>
            <angle>Jaw.Angle</angle>
        </parab>
    </section>

    <section name="Neckline" pgroup="Neckline">
        <parab res="15" name="Neckline">
            <center x="0" z="0">
                <y>Jaw.Height + Neckline.Height</y>
            </center>
            <width>Neckline.Width</width>
            <length>Neckline.Length</length>
            <angle>Neckline.Angle</angle>
        </parab>
    </section>

    <section name="Neck" pgroup="Neck">
        <parab res="15" name="Neck" nolines="true">
            <center x="0" z="0">
                <y>Jaw.Height + Neckline.Height/2</y>
            </center>
            <width>.75*Jaw.Width + .25*Neckline.Width</width>
            <length>Jaw.Length/2 + Neckline.Length/2 + Neck.Fatness</length>
            <angle>Jaw.Angle/2 + Neckline.Angle/2</angle>
        </parab>
        <for>
            <range>
                <var name="ANGLE" value="0" />
                <var name="ANGLE" value="Eyes.Corner_Angle.theta" />
                <var name="ANGLE" value="Eyes.Eye_Angle.theta" />
                <var name="ANGLE" value="PI / 2" />
            </range>
            <bezier res="7" reflect="both" clickable="false">
                <point type="cyl">
                    <r>ParabR(Jaw, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Jaw, ANGLE)</z>
                </point>
                <point type="cyl">
                    <r>ParabR(Neck, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Neck, ANGLE)</z>
                </point>
                <point type="cyl">
                    <r>ParabR(Neckline, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Neckline, ANGLE)</z>
                </point>
            </bezier>
        </for>
    </section>

    <section name="Mouth" pgroup="Mouth">
        <parab res="7" name="Mouth">
            <center x="0" y="Mouth.Height" z="Mouth.Depth" />
            <width>Mouth.Width</width>
            <length>Mouth.Bite_Size</length>
            <angle>PI/2</angle>
        </parab>
    </section>

    <section name="Lips" pgroup="Lips">
        <parab res="7" name="Upper_Lip">
            <center x="0" y="Mouth.Height" z="Mouth.Depth" />
            <width>Mouth.Width</width>
            <length>Mouth.Bite_Size + Lips.Upper_Length</length>
            <angle>-Lips.Upper_Height</angle>
        </parab>
        <parab res="7" name="Lower_Lip">
            <center x="0" y="Mouth.Height" z="Mouth.Depth" />
            <width>Mouth.Width</width>
            <length>Mouth.Bite_Size + Lips.Lower_Length</length>
            <angle>-Lips.Lower_Height</angle>
        </parab>
    </section>

    <section name="Chin" pgroup="Chin">
        <bezier res="7" reflect="false">
            <point type="cyl">
                <r>ParabR(Jaw, 0)</r>
                <theta>0</theta>
                <z>ParabZ(Jaw, 0)</z>
            </point>
            <point type="cyl">
                <r>ParabR(Lower_Lip, 0) - Chin.Outer_Depth</r>
                <theta>0</theta>
                <z>(3 * ParabZ(Jaw, 0) + ParabZ(Lower_Lip, 0)) / 4</z>
            </point>
            <point type="cyl">
                <r>ParabR(Lower_Lip, 0) - Chin.Inner_Depth</r>
                <theta>0</theta>
                <z>(ParabZ(Jaw, 0) + 3 * ParabZ(Lower_Lip, 0)) / 4</z>
            </point>
            <point type="cyl">
                <r>ParabR(Lower_Lip, 0)</r>
                <theta>0</theta>
                <z>ParabZ(Lower_Lip, 0)</z>
            </point>
        </bezier>
        <bezier res="7" reflect="both">
            <point type="cyl">
                <r>ParabR(Jaw, Mouth.Corner_Angle.theta)</r>
                <theta>Mouth.Corner_Angle.theta</theta>
                <z>ParabZ(Jaw, Mouth.Corner_Angle.theta)</z>
            </point>
            <point type="cyl">
                <r>Mouth.Corner_Angle.radius + Chin.Side_Depth</r>
                <theta>Mouth.Corner_Angle.theta</theta>
                <z>(ParabZ(Jaw, 0) + ParabZ(Lower_Lip, 0)) / 2</z>
            </point>
            <point type="cyl">
                <r>Mouth.Corner_Angle.radius</r>
                <theta>Mouth.Corner_Angle.theta</theta>
                <z>Mouth.Height</z>
            </point>
        </bezier>
    </section>

    <section name="Nose" pgroup="Nose">
        <parab res="11" name="Nose">
            <center x="0" y="Nose.Height" z="Nose.Depth" />
            <width>Nose.Width</width>
            <length>Nose.Length</length>
            <angle>Nose.Squish</angle>
        </parab>
        <for>
            <range>
                <var name="ANGLE" value="0" />
                <var name="SPACING" value="0" />

                <var name="ANGLE" value="Septum.Width" />
                <var name="SPACING" value="Nose.Nostril_Spacing" />
            </range>
            <bezier res="7" reflect="both">
                <point type="cyl">
                    <r>ParabR(Nose, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE)</z>
                </point>
                <point type="cyl">
                    <r>ParabR(Nose, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE) - Septum.Height1</z>
                </point>
                <point>
                    <x>SPACING</x>
                    <y>Nose.Height - Nose.Zeuth</y>
                    <z>Nose.Depth + Nose.Forward</z>
                </point>
            </bezier>
        </for>
    </section>

    <section name="Septum" pgroup="Septum">
        <for>
            <range>
                <var name="ANGLE" value="0" />
            </range>
            <bezier res="12" reflect="both">
                <point type="cyl">
                    <r>ParabR(Nose, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE)</z>
                </point>
                <point type="cyl">
                    <r>ParabR(Nose, ANGLE)</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE) + Septum.Height1</z>
                </point>
                <point type="cyl">
                    <r>(3*ParabR(Nose, ANGLE) + Septum.Bridge_Depth) / 4</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE) + Septum.Height2</z>
                </point>
                <point type="cyl">
                    <r>(ParabR(Nose, ANGLE) + Septum.Bridge_Depth) / 2</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE) + Septum.Height3</z>
                </point>
                <point type="cyl">
                    <r>(ParabR(Nose, ANGLE) + 3*Septum.Bridge_Depth) / 4</r>
                    <theta>ANGLE</theta>
                    <z>ParabZ(Nose, ANGLE) + Septum.Height4</z>
                </point>
                <point type="cyl">
                    <r>Septum.Bridge_Depth</r>
                    <theta>ANGLE</theta>
                    <z>0</z>
                </point>
            </bezier>

        </for>
    </section>

    <section name="Philtrum" pgroup="Philtrum">
        <bezier res="7" reflect="both">
            <point>
                <x>Nose.Width / 2</x>
                <y>Nose.Height</y>
                <z>Nose.Depth</z>
            </point>
            <point>
                <x>Mouth.Width / 2</x>
                <y>Mouth.Height*(1-Philtrum.Outer_Curve) + Nose.Height*(Philtrum.Outer_Curve)</y>
                <z>Nose.Depth</z>
            </point>
            <point>
                <x>Mouth.Width / 2</x>
                <y>Mouth.Height</y>
                <z>Mouth.Depth</z>
            </point>
        </bezier>
        <bezier res="10" reflect="both">
            <point>
                <x>Nose.Nostril_Spacing</x>
                <y>Nose.Height - Nose.Zeuth</y>
                <z>Nose.Depth + Nose.Forward</z>
            </point>
            <point type="cyl">
                <r>(ParabR(Upper_Lip,Philtrum.Width) + Nose.Nostril_Angle.radius) / 2 - Philtrum.Depth</r>
                <theta>(Philtrum.Width + Nose.Nostril_Angle.theta) / 2</theta>
                <z>(ParabZ(Upper_Lip,Philtrum.Width) + (Nose.Height - Nose.Zeuth)) / 2</z>
            </point>
            <point type="cyl">
                <r>ParabR(Upper_Lip,Philtrum.Width)</r>
                <theta>Philtrum.Width</theta>
                <z>ParabZ(Upper_Lip,Philtrum.Width)</z>
            </point>
        </bezier>
        <bezier res="10" reflect="false">
            <point>
                <x>0</x>
                <y>Nose.Height - Nose.Zeuth</y>
                <z>Nose.Depth + Nose.Forward</z>
            </point>
            <point type="cyl">
                <r>(ParabR(Upper_Lip,Philtrum.Width) + Nose.Nostril_Angle.radius) / 2 - Philtrum.Depth</r>
                <theta>0</theta>
                <z>((ParabZ(Upper_Lip,Philtrum.Width) - Philtrum.Indent) + (Nose.Height - Nose.Zeuth)) / 2</z>
            </point>
            <point type="cyl">
                <r>ParabR(Upper_Lip,Philtrum.Width)</r>
                <theta>0</theta>
                <z>ParabZ(Upper_Lip,Philtrum.Width) - Philtrum.Indent</z>
            </point>
        </bezier>
    </section>

    <section name="Sinuses" pgroup="Sinuses">
        <bezier res="10" reflect="both">
            <point>
                <x>Nose.Width / 2</x>
                <y>Nose.Height</y>
                <z>Nose.Depth</z>
            </point>
            <point>
                <x>Nose.Width / 2</x>
                <y>(1-Sinuses.Height) * Nose.Height</y>
                <z>Nose.Depth</z>
            </point>
            <point>
                <x>Eyes.Spacing - Eyes.Size</x>
                <y>0</y>
                <z>Eyes.Depth + Sinuses.Depth</z>
            </point>
        </bezier>
    </section>

    <section name="Cheeks" pgroup="Cheeks">
        <!-- cheekbone to chin -->
        <bezier res="10" reflect="both">
            <point type="cyl">
                <r>Cheeks.Depth</r>
                <theta>Eyes.Eye_Angle.theta + Cheeks.Spacing</theta>
                <z>Cheeks.Height</z>
            </point>
            <point type="cyl">
                <r>Cheeks.Depth</r>
                <theta>Eyes.Eye_Angle.theta + Cheeks.Spacing</theta>
                <z>Cheeks.Height - Cheeks.Puff</z>
            </point>
            <point type="cyl">
                <r>ParabR(Jaw, Eyes.Eye_Angle.theta)</r>
                <theta>Eyes.Eye_Angle.theta</theta>
                <z>ParabZ(Jaw, Eyes.Eye_Angle.theta)</z>
            </point>
        </bezier>
        <!-- cheekbone to eye -->
        <bezier res="10" reflect="both">
            <point type="cyl">
                <r>Cheeks.Depth</r>
                <theta>Eyes.Eye_Angle.theta + Cheeks.Spacing</theta>
                <z>Cheeks.Height</z>
            </point>
            <point type="cyl">
                <r>Cheeks.Depth</r>
                <theta>Eyes.Eye_Angle.theta + Cheeks.Spacing</theta>
                <z>Cheeks.Height + Cheeks.Puff/2</z>
            </point>
            <point type="cyl">
                <r>(Eyes.Spacing^2 + Eyes.Depth^2)^.5 + Eyes.Size * cos(Eyes.Bottom)</r>
                <theta>Eyes.Eye_Angle.theta + Cheeks.Spacing</theta>
                <z>Eyes.Size * sin(Eyes.Bottom)</z>
            </point>
        </bezier>
    </section>

</model>
